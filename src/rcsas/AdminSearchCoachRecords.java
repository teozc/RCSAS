/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rcsas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jerem
 */
public class AdminSearchCoachRecords extends javax.swing.JFrame {

    /**
     * Creates new form SearchCoachRecordsPage
     */
    
    public AdminSearchCoachRecords() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchCoachRecordsPageLabel = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        SearchByLabel = new javax.swing.JLabel();
        SearchCriteriaLabel = new javax.swing.JLabel();
        SearchByComboBox = new javax.swing.JComboBox<>();
        SearchCriteriaText = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CoachRecordTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SearchCoachRecordsPageLabel.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        SearchCoachRecordsPageLabel.setForeground(new java.awt.Color(0, 0, 0));
        SearchCoachRecordsPageLabel.setText("Search Coach Records Page");

        BackButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        SearchByLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SearchByLabel.setForeground(new java.awt.Color(0, 0, 0));
        SearchByLabel.setText("Search by:");

        SearchCriteriaLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SearchCriteriaLabel.setForeground(new java.awt.Color(0, 0, 0));
        SearchCriteriaLabel.setText("Search criteria:");

        SearchByComboBox.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SearchByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Coach ID", "Overall performance (Rating)" }));

        SearchCriteriaText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        SearchButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        CoachRecordTable.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        CoachRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coach ID", "Name", "Date Joined", "Date Terminated", "Hourly Rate", "Phone", "Address", "Sport Center ID", "Sport Center Name", "Sport ID", "Sport Name", "Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CoachRecordTable.setRowHeight(30);
        jScrollPane1.setViewportView(CoachRecordTable);
        if (CoachRecordTable.getColumnModel().getColumnCount() > 0) {
            CoachRecordTable.getColumnModel().getColumn(6).setPreferredWidth(300);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(70, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1639, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchCoachRecordsPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SearchButton)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(SearchCriteriaLabel)
                                .addComponent(SearchByLabel))
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(SearchByComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SearchCriteriaText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(SearchCoachRecordsPageLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchByLabel)
                    .addComponent(SearchByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchCriteriaLabel)
                    .addComponent(SearchCriteriaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SearchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.setVisible(false);
        AdminSearchSpecificRecords sp = new AdminSearchSpecificRecords();
        sp.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        int searchByIndex;
        DefaultTableModel model = (DefaultTableModel)CoachRecordTable.getModel();
        model.setRowCount(0);
        if (SearchCriteriaText.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty search criteria entered!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String searchBy = SearchByComboBox.getSelectedItem().toString();
        if (searchBy.equals("Coach ID")) {
            searchByIndex = 0;
        }
        else {
            searchByIndex = 11;
        }
        String searchCriteria = SearchCriteriaText.getText();
        Object[] coachRecords = Admin.getRecords(searchByIndex, searchCriteria, "Coach Records.txt").toArray();
        if (coachRecords.length == 0) {
            JOptionPane.showMessageDialog(this, "No coach records exist", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (Object coachRecord: coachRecords) {
            String[] row = coachRecord.toString().split("\t");
            model.addRow(row);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminSearchCoachRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminSearchCoachRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminSearchCoachRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminSearchCoachRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminSearchCoachRecords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTable CoachRecordTable;
    private javax.swing.JButton SearchButton;
    private javax.swing.JComboBox<String> SearchByComboBox;
    private javax.swing.JLabel SearchByLabel;
    private javax.swing.JLabel SearchCoachRecordsPageLabel;
    private javax.swing.JLabel SearchCriteriaLabel;
    private javax.swing.JTextField SearchCriteriaText;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
