/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rcsas;
import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import java.util.*;
/**
 *
 * @author jerem
 */
public class RegisterPage extends javax.swing.JFrame {

    /**
     * Creates new form RegisterPage
     */
    DefaultListModel model = new DefaultListModel();
    
    public RegisterPage() {
        initComponents();
    }
    Hashtable<String, String> sportNameSportID_dict;
    String SportCenterID = "";
    String SportID = "";
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SportButtonGroup = new javax.swing.ButtonGroup();
        RegisterPageLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        NameText = new javax.swing.JTextField();
        HomePageButton = new javax.swing.JButton();
        GenderLabel = new javax.swing.JLabel();
        GenderCombo = new javax.swing.JComboBox<>();
        SwimmingButton = new javax.swing.JRadioButton();
        BadmintonButton = new javax.swing.JRadioButton();
        FootballButton = new javax.swing.JRadioButton();
        ArcheryButton = new javax.swing.JRadioButton();
        GymnasticsButton = new javax.swing.JRadioButton();
        VolleyballButton = new javax.swing.JRadioButton();
        BasketballButton = new javax.swing.JRadioButton();
        CricketButton = new javax.swing.JRadioButton();
        TennisButton = new javax.swing.JRadioButton();
        TableTennisButton = new javax.swing.JRadioButton();
        SportsLabel = new javax.swing.JLabel();
        SportCenterLabel = new javax.swing.JLabel();
        SportCenterCombo = new javax.swing.JComboBox<>();
        SportScheduleLabel = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        UsernameText = new javax.swing.JTextField();
        PasswordLabel = new javax.swing.JLabel();
        PasswordText = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        SportScheduleList = new javax.swing.JList<>(model);
        RegisterButton = new javax.swing.JButton();
        AgeSpinner = new javax.swing.JSpinner();
        SportFeeLabel = new javax.swing.JLabel();
        SportFeeText = new javax.swing.JTextField();
        SelectButton = new javax.swing.JButton();
        SportCenterText = new javax.swing.JTextField();
        CheckButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegisterPageLabel.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        RegisterPageLabel.setForeground(new java.awt.Color(0, 0, 0));
        RegisterPageLabel.setText("Register Page");

        NameLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        NameLabel.setForeground(new java.awt.Color(0, 0, 0));
        NameLabel.setText("Name:");

        NameText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        HomePageButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        HomePageButton.setText("Home");
        HomePageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomePageButtonActionPerformed(evt);
            }
        });

        GenderLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        GenderLabel.setForeground(new java.awt.Color(0, 0, 0));
        GenderLabel.setText("Gender:");

        GenderCombo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        GenderCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        GenderCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderComboActionPerformed(evt);
            }
        });

        SportButtonGroup.add(SwimmingButton);
        SwimmingButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SwimmingButton.setText("Swimming");
        SwimmingButton.setActionCommand(SwimmingButton.getText());
        SwimmingButton.setEnabled(false);

        SportButtonGroup.add(BadmintonButton);
        BadmintonButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        BadmintonButton.setText("Badminton");
        BadmintonButton.setActionCommand(BadmintonButton.getText());
        BadmintonButton.setEnabled(false);

        SportButtonGroup.add(FootballButton);
        FootballButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        FootballButton.setText("Football");
        FootballButton.setActionCommand(FootballButton.getText());
        FootballButton.setEnabled(false);

        SportButtonGroup.add(ArcheryButton);
        ArcheryButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        ArcheryButton.setText("Archery");
        ArcheryButton.setActionCommand(ArcheryButton.getText());
        ArcheryButton.setEnabled(false);

        SportButtonGroup.add(GymnasticsButton);
        GymnasticsButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        GymnasticsButton.setText("Gymnastics");
        GymnasticsButton.setActionCommand(GymnasticsButton.getText());
        GymnasticsButton.setEnabled(false);

        SportButtonGroup.add(VolleyballButton);
        VolleyballButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        VolleyballButton.setText("Volleyball");
        VolleyballButton.setActionCommand(VolleyballButton.getText());
        VolleyballButton.setEnabled(false);

        SportButtonGroup.add(BasketballButton);
        BasketballButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        BasketballButton.setText("Basketball");
        BasketballButton.setActionCommand(BasketballButton.getText());
        BasketballButton.setEnabled(false);

        SportButtonGroup.add(CricketButton);
        CricketButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        CricketButton.setText("Cricket");
        CricketButton.setActionCommand(CricketButton.getText());
        CricketButton.setEnabled(false);

        SportButtonGroup.add(TennisButton);
        TennisButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        TennisButton.setText("Tennis");
        TennisButton.setActionCommand(TennisButton.getText());
        TennisButton.setEnabled(false);

        SportButtonGroup.add(TableTennisButton);
        TableTennisButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        TableTennisButton.setText("Table Tennis");
        TableTennisButton.setActionCommand(TableTennisButton.getText());
        TableTennisButton.setEnabled(false);

        SportsLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SportsLabel.setForeground(new java.awt.Color(0, 0, 0));
        SportsLabel.setText("Sport:");

        SportCenterLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SportCenterLabel.setForeground(new java.awt.Color(0, 0, 0));
        SportCenterLabel.setText("Sport Center:");

        SportCenterCombo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SportCenterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kuala Lumpur (SC001)", "Selangor (SC002)", "Sabah (SC003)", "Kedah (SC004)", "Sarawak (SC005)" }));
        SportCenterCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SportCenterComboActionPerformed(evt);
            }
        });

        SportScheduleLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SportScheduleLabel.setForeground(new java.awt.Color(0, 0, 0));
        SportScheduleLabel.setText("Sport Schedule:");

        UsernameLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        UsernameLabel.setForeground(new java.awt.Color(0, 0, 0));
        UsernameLabel.setText("Username:");

        AgeLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        AgeLabel.setForeground(new java.awt.Color(0, 0, 0));
        AgeLabel.setText("Age:");

        UsernameText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        PasswordLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        PasswordLabel.setForeground(new java.awt.Color(0, 0, 0));
        PasswordLabel.setText("Password:");

        PasswordText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        SportScheduleList.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(SportScheduleList);

        RegisterButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        AgeSpinner.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        AgeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        SportFeeLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        SportFeeLabel.setForeground(new java.awt.Color(0, 0, 0));
        SportFeeLabel.setText("Total sport fee:");

        SportFeeText.setBackground(new java.awt.Color(255, 255, 255));
        SportFeeText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SportFeeText.setForeground(new java.awt.Color(0, 0, 0));
        SportFeeText.setEnabled(false);

        SelectButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        SelectButton.setText("Select");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        SportCenterText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SportCenterText.setForeground(new java.awt.Color(0, 0, 0));
        SportCenterText.setEnabled(false);

        CheckButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        CheckButton.setText("Check");
        CheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomePageButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(RegisterPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SportFeeLabel)
                            .addComponent(SportScheduleLabel))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SportFeeText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegisterButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 118, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgeLabel)
                            .addComponent(NameLabel)
                            .addComponent(GenderLabel)
                            .addComponent(UsernameLabel)
                            .addComponent(PasswordLabel)
                            .addComponent(SportCenterLabel)
                            .addComponent(SportsLabel))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(AgeSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(GenderCombo, 0, 150, Short.MAX_VALUE)
                                        .addComponent(UsernameText, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(PasswordText, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(NameText))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SportCenterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(SelectButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SportCenterText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SwimmingButton)
                                    .addComponent(VolleyballButton))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BadmintonButton)
                                    .addComponent(BasketballButton, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(FootballButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(ArcheryButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CricketButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(TennisButton)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TableTennisButton)
                                    .addComponent(GymnasticsButton))))
                        .addContainerGap(77, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ClearButton)
                .addGap(18, 18, 18)
                .addComponent(CheckButton)
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RegisterPageLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameLabel))
                        .addGap(20, 20, 20)
                        .addComponent(AgeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AgeLabel))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenderLabel))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameLabel))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel)
                    .addComponent(PasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SportCenterLabel)
                    .addComponent(SportCenterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectButton)
                    .addComponent(SportCenterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SportsLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SwimmingButton)
                            .addComponent(BadmintonButton)
                            .addComponent(FootballButton)
                            .addComponent(ArcheryButton)
                            .addComponent(GymnasticsButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VolleyballButton)
                            .addComponent(BasketballButton)
                            .addComponent(CricketButton)
                            .addComponent(TennisButton)
                            .addComponent(TableTennisButton))))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckButton)
                    .addComponent(ClearButton))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SportScheduleLabel))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SportFeeLabel)
                    .addComponent(SportFeeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RegisterButton)
                .addGap(53, 53, 53)
                .addComponent(HomePageButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void HomePageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomePageButtonActionPerformed
        this.setVisible(false);
        HomePage hp = new HomePage();
        hp.setVisible(true);
    }//GEN-LAST:event_HomePageButtonActionPerformed

    private void GenderComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderComboActionPerformed

    private void SportCenterComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SportCenterComboActionPerformed
        
    }//GEN-LAST:event_SportCenterComboActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        Student s = new Student();
        int count = 0;
        List<String> SportSchedules = new ArrayList<String>();
        List<String> SportScheduleIDs = new ArrayList<String>();
        if (NameText.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty name entered!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            s.name = NameText.getText().trim();
        }
        s.age = (Integer) AgeSpinner.getValue();
        s.gender = GenderCombo.getSelectedItem().toString();
        if (UsernameText.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty username entered!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            try {
                String line;
                String[] tempArray;
                BufferedReader br = new BufferedReader(new FileReader("Username & Password.txt"));
                while ((line = br.readLine()) != null) {
                    tempArray = line.split("\t", -1);
                    if (tempArray[0].equals(UsernameText.getText().trim())) {
                        JOptionPane.showMessageDialog(this, "This username was taken! Please try with another username!", "Error Message", JOptionPane.ERROR_MESSAGE);
                        UsernameText.setText("");
                        return;
                    }
                }
                br.close();
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
                return;
            }
            s.username = UsernameText.getText().trim();
        }
        if (PasswordText.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty password entered!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            s.password = PasswordText.getText().trim();
        }
        if (SportCenterText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No sport center selected!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            s.sportCenterID = this.SportCenterID;
        }
        if (this.SportID.equals("")) {
            JOptionPane.showMessageDialog(this, "No sport selected!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            s.sportID = this.SportID;
        }
        if (SportScheduleList.getSelectedValuesList().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No sport schedule selected!", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else {
            String singleID = "";
            SportSchedules = SportScheduleList.getSelectedValuesList();
            for (int i = 0; i < SportSchedules.size(); i++) {
                singleID = SportSchedules.get(i).substring(SportSchedules.get(i).indexOf('(') + 1, SportSchedules.get(i).indexOf(')'));
                SportScheduleIDs.add(singleID);
                count++;
            }
            s.sportScheduleIDs = SportScheduleIDs;
        }
        int result = s.register();
        if (result == 0) {
            JOptionPane.showMessageDialog(this, "Error writing into file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        else {
            JOptionPane.showMessageDialog(this, "Registration successful!", "Congratualations!", JOptionPane.ERROR_MESSAGE);
        }
        int SportFee = count * 150;
        SportFeeText.setText("RM"+SportFee);
    }//GEN-LAST:event_RegisterButtonActionPerformed
    
    
    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        SwimmingButton.setEnabled(false);
        BadmintonButton.setEnabled(false);
        FootballButton.setEnabled(false);
        ArcheryButton.setEnabled(false);
        GymnasticsButton.setEnabled(false);
        VolleyballButton.setEnabled(false);
        BasketballButton.setEnabled(false);
        CricketButton.setEnabled(false);
        TennisButton.setEnabled(false);
        TableTennisButton.setEnabled(false);
        SportButtonGroup.clearSelection();
        this.SportID = "";
        String line, sportName;
        String[] tempArray;
        Hashtable<String, String> sportNameSportID_dict = new Hashtable<String, String>();
        String SportCenterID = SportCenterCombo.getSelectedItem().toString();
        SportCenterText.setText(SportCenterID);
        SportCenterID = SportCenterID.substring(SportCenterID.indexOf('(') + 1, SportCenterID.indexOf(')'));
        this.SportCenterID = SportCenterID;
        try {
            BufferedReader br = new BufferedReader(new FileReader("Sport Records.txt"));
            while((line = br.readLine()) != null) {
                if (line.contains(SportCenterID)) {
                    tempArray = line.split("\t", -1);
                    sportName = tempArray[1];
                    sportNameSportID_dict.put(tempArray[1], tempArray[0]);
                    switch(sportName) {
                        case "Swimming":
                            SwimmingButton.setEnabled(true);
                            break;
                        case "Badminton":
                            BadmintonButton.setEnabled(true);
                            break;
                        case "Football":
                            FootballButton.setEnabled(true);
                            break;
                        case "Archery":
                            ArcheryButton.setEnabled(true);
                            break;
                        case "Gymnastics":
                            GymnasticsButton.setEnabled(true);
                            break;
                        case "Volleyball":
                            VolleyballButton.setEnabled(true);
                            break;
                        case "Basketball":
                            BasketballButton.setEnabled(true);
                            break;
                        case "Cricket":
                            CricketButton.setEnabled(true);
                            break;
                        case "Tennis":
                            TennisButton.setEnabled(true);
                            break;
                        case "Table Tennis":
                            TableTennisButton.setEnabled(true);
                            break;
                    }
                }
            }
            br.close();
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Error Opening File", "Warning Messsage", JOptionPane.ERROR_MESSAGE);
        }
        this.sportNameSportID_dict = sportNameSportID_dict;
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void CheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckButtonActionPerformed
        model.clear();
        try {
            String sportID = null;
            String selection = SportButtonGroup.getSelection().getActionCommand();
            Set<String> keys = sportNameSportID_dict.keySet();
            for (String key: keys) {
                if (selection.equals(key)) {
                    sportID = sportNameSportID_dict.get(key);
                    this.SportID = sportID;
                    break;
                }
            }
            String line;
            String[] tempArray;
            BufferedReader br = new BufferedReader(new FileReader("Sport Schedule Records.txt"));
            while ((line = br.readLine()) != null) {
                if (line.contains(sportID)) {
                    tempArray = line.split("\t", -1);
                    model.addElement(tempArray[2] + ", " + tempArray[3] + " (" + tempArray[0] + ")");
                }
            }
            br.close();
        }
        catch (FileNotFoundException f) {
            JOptionPane.showMessageDialog(this, "Error opening file!", "Warning Messsage", JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please select one of the sports!", "Warning Messsage", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CheckButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        SportButtonGroup.clearSelection();
        model.clear();
    }//GEN-LAST:event_ClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JSpinner AgeSpinner;
    private javax.swing.JRadioButton ArcheryButton;
    private javax.swing.JRadioButton BadmintonButton;
    private javax.swing.JRadioButton BasketballButton;
    private javax.swing.JButton CheckButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JRadioButton CricketButton;
    private javax.swing.JRadioButton FootballButton;
    private javax.swing.JComboBox<String> GenderCombo;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JRadioButton GymnasticsButton;
    private javax.swing.JButton HomePageButton;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameText;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordText;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JLabel RegisterPageLabel;
    private javax.swing.JButton SelectButton;
    private javax.swing.ButtonGroup SportButtonGroup;
    private javax.swing.JComboBox<String> SportCenterCombo;
    private javax.swing.JLabel SportCenterLabel;
    private javax.swing.JTextField SportCenterText;
    private javax.swing.JLabel SportFeeLabel;
    private javax.swing.JTextField SportFeeText;
    private javax.swing.JLabel SportScheduleLabel;
    private javax.swing.JList<String> SportScheduleList;
    private javax.swing.JLabel SportsLabel;
    private javax.swing.JRadioButton SwimmingButton;
    private javax.swing.JRadioButton TableTennisButton;
    private javax.swing.JRadioButton TennisButton;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameText;
    private javax.swing.JRadioButton VolleyballButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
