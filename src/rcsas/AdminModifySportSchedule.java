/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rcsas;

import java.io.*;
import javax.swing.JOptionPane;

/**
 *
 * @author System Manager
 */
public class AdminModifySportSchedule extends javax.swing.JFrame {

    /*String lastSelectedScheduleID;/*
    /**
     * Creates new form AdminAddSportSchedule
     */
    public AdminModifySportSchedule() {
        initComponents();
        updateSport();
        try{
            BufferedReader br = new BufferedReader(new FileReader("Sport Schedule Records.txt"));
            Object[] lines;
            String[] data;
            lines = br.lines().toArray();
            for (int i = 0; i < lines.length; i++){
                data = lines[i].toString().split("\t");
                SportScheduleIDComboBox.addItem(data[0]);
            }
            /*lastSelectedScheduleID = SportScheduleIDComboBox.getSelectedItem().toString();*/
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void updateDetails(){
        try{             
            BufferedReader br = new BufferedReader(new FileReader("Sport Schedule Records.txt"));
            String[] time, fromTime, toTime;
            Object[] lines = br.lines().toArray();
            String[] data;
            for (int i = 0; i < lines.length; i++){
                data = lines[i].toString().split("\t");
                if (data[0].equals(SportScheduleIDComboBox.getSelectedItem().toString())){
                    time = data[3].split("-");
                    fromTime = time[0].split(":");
                    toTime = time[1].split(":");
                    SportComboBox.setSelectedItem(data[1]);
                    DayComboBox.setSelectedItem(data[2]);
                    FromHourSpinner.setValue(Integer.parseInt(fromTime[0].trim()));
                    FromMinuteSpinner.setValue(Integer.parseInt(fromTime[1].trim()));
                    ToHourSpinner.setValue(Integer.parseInt(toTime[0].trim()));
                    ToMinuteSpinner.setValue(Integer.parseInt(toTime[1].trim()));
                    CoachComboBox.setSelectedItem(data[4]);
                }
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        if (SportScheduleIDComboBox.getSelectedItem() != null){
            SportComboBox.setEnabled(true);
            DayComboBox.setEnabled(true);
            FromHourSpinner.setEnabled(true);
            FromMinuteSpinner.setEnabled(true);
            ToHourSpinner.setEnabled(true);
            ToMinuteSpinner.setEnabled(true);
            CoachComboBox.setEnabled(true);
            UpdateButton.setEnabled(true);
        }       
    }
    
    private void updateCoach(){
        CoachComboBox.removeAllItems();
        try{
            BufferedReader br = new BufferedReader(new FileReader("Coach Records.txt"));
            String temp;
            String[] data;
            while((temp = br.readLine()) != null){
                data = temp.split("\t", -1);
                if (SportComboBox.getSelectedItem().toString().equals(data[9])) {
                    CoachComboBox.addItem(data[0]);
                }
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void updateSport(){
        try{
            BufferedReader br = new BufferedReader(new FileReader("Sport Records.txt"));
            String temp;
            String[] data;
            while((temp = br.readLine()) != null){
                data = temp.split("\t", -1);
                SportComboBox.addItem(data[0]);
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminAddSportScheduleLabel = new javax.swing.JLabel();
        SportLabel = new javax.swing.JLabel();
        SportComboBox = new javax.swing.JComboBox<>();
        DayLabel = new javax.swing.JLabel();
        DayComboBox = new javax.swing.JComboBox<>();
        TimeLabel = new javax.swing.JLabel();
        FromHourSpinner = new javax.swing.JSpinner();
        FromMinuteSpinner = new javax.swing.JSpinner();
        FromLabel = new javax.swing.JLabel();
        ToHourSpinner = new javax.swing.JSpinner();
        ToMinuteSpinner = new javax.swing.JSpinner();
        ToLabel = new javax.swing.JLabel();
        TillLabel = new javax.swing.JLabel();
        CoachLabel = new javax.swing.JLabel();
        CoachComboBox = new javax.swing.JComboBox<>();
        SportScheduleIDLabel = new javax.swing.JLabel();
        SportScheduleIDComboBox = new javax.swing.JComboBox<>();
        BackButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AdminAddSportScheduleLabel.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        AdminAddSportScheduleLabel.setText("Modify Sport Schedule");

        SportLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        SportLabel.setText("Sport:");

        SportComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SportComboBox.setEnabled(false);
        SportComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SportComboBoxActionPerformed(evt);
            }
        });

        DayLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        DayLabel.setText("Day:");

        DayComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mondays", "Tuesdays", "Wednesdays", "Thursdays", "Fridays", "Saturdays", "Sundays" }));
        DayComboBox.setEnabled(false);

        TimeLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TimeLabel.setText("Time:");

        FromHourSpinner.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromHourSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        FromHourSpinner.setEnabled(false);

        FromMinuteSpinner.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        FromMinuteSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        FromMinuteSpinner.setEnabled(false);

        FromLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        FromLabel.setText(":");
        FromLabel.setEnabled(false);

        ToHourSpinner.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToHourSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        ToHourSpinner.setEnabled(false);

        ToMinuteSpinner.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        ToMinuteSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        ToMinuteSpinner.setEnabled(false);

        ToLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        ToLabel.setText(":");
        ToLabel.setEnabled(false);

        TillLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TillLabel.setText("-");
        TillLabel.setEnabled(false);

        CoachLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        CoachLabel.setText("Coach:");

        CoachComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        CoachComboBox.setEnabled(false);

        SportScheduleIDLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        SportScheduleIDLabel.setText("Sport Schedule ID:");

        SportScheduleIDComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SportScheduleIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SportScheduleIDComboBoxActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        UpdateButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.setEnabled(false);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CoachLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(CoachComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UpdateButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TimeLabel)
                                    .addGap(117, 117, 117)
                                    .addComponent(FromHourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(FromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(FromMinuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(TillLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(ToHourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(ToLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(ToMinuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(SportScheduleIDLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(SportScheduleIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(SportLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(162, 162, 162)
                                    .addComponent(SportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(DayLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(202, 202, 202))))
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AdminAddSportScheduleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(AdminAddSportScheduleLabel)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SportScheduleIDLabel)
                    .addComponent(SportScheduleIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SportLabel)
                    .addComponent(SportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayLabel)
                    .addComponent(DayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeLabel)
                    .addComponent(FromHourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromMinuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromLabel)
                    .addComponent(ToHourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToMinuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToLabel)
                    .addComponent(TillLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoachLabel)
                    .addComponent(CoachComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(UpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        AdminModifyRecord amr = new AdminModifyRecord();
        amr.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SportScheduleIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SportScheduleIDComboBoxActionPerformed
        updateDetails();
    }//GEN-LAST:event_SportScheduleIDComboBoxActionPerformed

    private void SportComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SportComboBoxActionPerformed
        updateCoach();
    }//GEN-LAST:event_SportComboBoxActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        if (CoachComboBox.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "No coach available for this sport.", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            BufferedReader br = new BufferedReader(new FileReader("Sport Records.txt"));
            String temp;
            String[] data;
            String sportCenterID = "MISSING";
            while((temp = br.readLine()) != null){
                data = temp.split("\t", -1);
                if (SportComboBox.getSelectedItem().toString().equals(data[0])){
                    sportCenterID = data[2];
                    break;
                }
            }
            SportSchedule ss = new SportSchedule(SportComboBox.getSelectedItem().toString(), DayComboBox.getSelectedItem().toString(), String.format("%02d:%02d - %02d:%02d", FromHourSpinner.getValue(), FromMinuteSpinner.getValue(), ToHourSpinner.getValue(), ToMinuteSpinner.getValue()), CoachComboBox.getSelectedItem().toString(), sportCenterID);
            ss.sportScheduleID = SportScheduleIDComboBox.getSelectedItem().toString();
            if (ss.modifyRecord() == 1){
                JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "Sport schedule record updated successfully.", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminModifySportSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminModifySportSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminModifySportSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminModifySportSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminModifySportSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdminAddSportScheduleLabel;
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox<String> CoachComboBox;
    private javax.swing.JLabel CoachLabel;
    private javax.swing.JComboBox<String> DayComboBox;
    private javax.swing.JLabel DayLabel;
    private javax.swing.JSpinner FromHourSpinner;
    private javax.swing.JLabel FromLabel;
    private javax.swing.JSpinner FromMinuteSpinner;
    private javax.swing.JComboBox<String> SportComboBox;
    private javax.swing.JLabel SportLabel;
    private javax.swing.JComboBox<String> SportScheduleIDComboBox;
    private javax.swing.JLabel SportScheduleIDLabel;
    private javax.swing.JLabel TillLabel;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JSpinner ToHourSpinner;
    private javax.swing.JLabel ToLabel;
    private javax.swing.JSpinner ToMinuteSpinner;
    private javax.swing.JButton UpdateButton;
    // End of variables declaration//GEN-END:variables
}
