/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rcsas;
import java.io.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author System Manager
 */
public class AdminModifyCoach extends javax.swing.JFrame {

    /**
     * Creates new form AdminAddCoach
     */
    Date dateJoined, dateTerminated;
    
    public AdminModifyCoach() {
        initComponents();
        dateJoined = new Date(DayJoinedComboBox.getSelectedItem().toString(), MonthJoinedComboBox.getSelectedItem().toString(), YearJoinedComboBox.getSelectedItem().toString());
        dateTerminated = new Date(DayTerminatedComboBox.getSelectedItem().toString(), MonthTerminatedComboBox.getSelectedItem().toString(), YearTerminatedComboBox.getSelectedItem().toString());
        try{
            BufferedReader br = new BufferedReader(new FileReader("Coach Records.txt"));
            Object[] lines;
            String[] data;
            lines = br.lines().toArray();
            for (int i = 0; i < lines.length; i++){
                data = lines[i].toString().split("\t");
                CoachIDComboBox.addItem(data[0]);
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        updateDetails();
    }

    private void updateDetails(){
        try{
            BufferedReader br = new BufferedReader(new FileReader("Coach Records.txt"));
            Object[] lines = br.lines().toArray();
            String[] data;
            for (int i = 0; i < lines.length; i++){
                data = lines[i].toString().split("\t");
                if (data[0].equals(CoachIDComboBox.getSelectedItem().toString())){
                    String[] dateJoined = data[2].split("/");
                    String[] dateTerminated = data[3].split("/");
                    NameText.setText(data[1]);
                    DayJoinedComboBox.setSelectedItem(dateJoined[0]);
                    MonthJoinedComboBox.setSelectedItem(dateJoined[1]);
                    YearJoinedComboBox.setSelectedItem(dateJoined[2]);
                    try{
                        DayTerminatedComboBox.setSelectedItem(dateTerminated[0]);
                        MonthTerminatedComboBox.setSelectedItem(dateTerminated[1]);
                        YearTerminatedComboBox.setSelectedItem(dateTerminated[2]);
                        TerminatedCheckBox.setSelected(true);
                        DayTerminatedComboBox.setEnabled(true);
                        MonthTerminatedComboBox.setEnabled(true);
                        YearTerminatedComboBox.setEnabled(true);
                    }
                    catch(Exception e){
                        TerminatedCheckBox.setSelected(false);
                        DayTerminatedComboBox.setEnabled(false);
                        MonthTerminatedComboBox.setEnabled(false);
                        YearTerminatedComboBox.setEnabled(false);
                    }
                    HourlyRateText.setText(data[4]);
                    PhoneText.setText(data[5]);
                    AddressText.setText(data[6]);
                    SportCenterComboBox.setSelectedItem(String.format("%s (%s)", data[7], data[8]));
                    SportComboBox.setSelectedItem(data[10]);                    
                }
            }
            br.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        if (CoachIDComboBox.getSelectedItem() != null){
            NameText.setEditable(true);
            DayJoinedComboBox.setEnabled(true);
            MonthJoinedComboBox.setEnabled(true);
            YearJoinedComboBox.setEnabled(true);
            TerminatedCheckBox.setEnabled(true);
            HourlyRateText.setEditable(true);
            PhoneText.setEditable(true);
            AddressText.setEditable(true);
            SportCenterComboBox.setEnabled(true);
            SportComboBox.setEnabled(true);
            UpdateButton.setEnabled(true);
        }
    }
    
    private void checkAndAddItem(DefaultComboBoxModel model, Object object){
        if (model.getIndexOf(object) == -1){
            model.addElement(object);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminModifyCoachLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        DateLabel1 = new javax.swing.JLabel();
        HourlyRateLabel = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        SportCenterLabel = new javax.swing.JLabel();
        SportLabel = new javax.swing.JLabel();
        NameText = new javax.swing.JTextField();
        DayJoinedComboBox = new javax.swing.JComboBox<>();
        MonthJoinedComboBox = new javax.swing.JComboBox<>();
        YearJoinedComboBox = new javax.swing.JComboBox<>();
        DateLabel2 = new javax.swing.JLabel();
        DateLabel3 = new javax.swing.JLabel();
        HourlyRateText = new javax.swing.JTextField();
        RMLabel = new javax.swing.JLabel();
        PhoneText = new javax.swing.JTextField();
        AddressText = new javax.swing.JTextField();
        SportCenterComboBox = new javax.swing.JComboBox<>();
        SportComboBox = new javax.swing.JComboBox<>();
        UpdateButton = new javax.swing.JButton();
        CoachIDLabel = new javax.swing.JLabel();
        CoachIDComboBox = new javax.swing.JComboBox<>();
        BackButton = new javax.swing.JButton();
        DayTerminatedComboBox = new javax.swing.JComboBox<>();
        MonthTerminatedComboBox = new javax.swing.JComboBox<>();
        YearTerminatedComboBox = new javax.swing.JComboBox<>();
        DateLabel4 = new javax.swing.JLabel();
        DateLabel5 = new javax.swing.JLabel();
        DateTerminatedLabel = new javax.swing.JLabel();
        TerminatedCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(930, 700));

        AdminModifyCoachLabel.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        AdminModifyCoachLabel.setText("Modify Coach Record");

        NameLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        NameLabel.setText("Name:");

        DateLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        DateLabel1.setText("Date Joined:");

        HourlyRateLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        HourlyRateLabel.setText("Hourly Rate:");

        PhoneLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        PhoneLabel.setText("Phone:");

        AddressLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        AddressLabel.setText("Address:");

        SportCenterLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        SportCenterLabel.setText("Sport Center:");

        SportLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        SportLabel.setText("Sport:");

        NameText.setEditable(false);
        NameText.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        DayJoinedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DayJoinedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DayJoinedComboBox.setToolTipText("");
        DayJoinedComboBox.setEnabled(false);
        DayJoinedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayJoinedComboBoxActionPerformed(evt);
            }
        });

        MonthJoinedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        MonthJoinedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        MonthJoinedComboBox.setToolTipText("");
        MonthJoinedComboBox.setEnabled(false);
        MonthJoinedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthJoinedComboBoxActionPerformed(evt);
            }
        });

        YearJoinedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        YearJoinedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        YearJoinedComboBox.setToolTipText("");
        YearJoinedComboBox.setEnabled(false);
        YearJoinedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearJoinedComboBoxActionPerformed(evt);
            }
        });

        DateLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DateLabel2.setText("/");
        DateLabel2.setEnabled(false);

        DateLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DateLabel3.setText("/");
        DateLabel3.setEnabled(false);

        HourlyRateText.setEditable(false);
        HourlyRateText.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        RMLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        RMLabel.setText("RM");

        PhoneText.setEditable(false);
        PhoneText.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        AddressText.setEditable(false);
        AddressText.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        SportCenterComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SportCenterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SC001 (Kuala Lumpur)", "SC002 (Selangor)", "SC003 (Sabah)", "SC004 (Kedah)", "SC005 (Sarawak)" }));
        SportCenterComboBox.setEnabled(false);

        SportComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        SportComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Swimming", "Badminton", "Football", "Archery", "Gymnastics", "Volleyball", "Basketball", "Cricket", "Tennis", "Table Tennis" }));
        SportComboBox.setEnabled(false);

        UpdateButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.setEnabled(false);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        CoachIDLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        CoachIDLabel.setText("Coach ID:");

        CoachIDComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        CoachIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoachIDComboBoxActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        DayTerminatedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DayTerminatedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DayTerminatedComboBox.setToolTipText("");
        DayTerminatedComboBox.setEnabled(false);
        DayTerminatedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayTerminatedComboBoxActionPerformed(evt);
            }
        });

        MonthTerminatedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        MonthTerminatedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        MonthTerminatedComboBox.setToolTipText("");
        MonthTerminatedComboBox.setEnabled(false);
        MonthTerminatedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthTerminatedComboBoxActionPerformed(evt);
            }
        });

        YearTerminatedComboBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        YearTerminatedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        YearTerminatedComboBox.setToolTipText("");
        YearTerminatedComboBox.setEnabled(false);
        YearTerminatedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearTerminatedComboBoxActionPerformed(evt);
            }
        });

        DateLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DateLabel4.setText("/");
        DateLabel4.setEnabled(false);

        DateLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        DateLabel5.setText("/");
        DateLabel5.setEnabled(false);

        DateTerminatedLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        DateTerminatedLabel.setText("Date Terminated:");

        TerminatedCheckBox.setText("Terminated");
        TerminatedCheckBox.setEnabled(false);
        TerminatedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminatedCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateLabel1)
                            .addComponent(DateTerminatedLabel)
                            .addComponent(PhoneLabel)
                            .addComponent(AddressLabel)
                            .addComponent(HourlyRateLabel)
                            .addComponent(SportLabel)
                            .addComponent(SportCenterLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RMLabel)
                                .addGap(18, 18, 18)
                                .addComponent(HourlyRateText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SportCenterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(DayJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(DateLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(MonthJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(DateLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(YearJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(DayTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(DateLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(MonthTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(DateLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(YearTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(TerminatedCheckBox))))
                                    .addComponent(SportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(AdminModifyCoachLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(UpdateButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CoachIDLabel)
                            .addComponent(NameLabel))
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CoachIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(AdminModifyCoachLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoachIDLabel)
                    .addComponent(CoachIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateLabel2)
                    .addComponent(DateLabel3)
                    .addComponent(MonthJoinedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateLabel4)
                    .addComponent(DateLabel5)
                    .addComponent(MonthTerminatedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateTerminatedLabel)
                    .addComponent(TerminatedCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HourlyRateLabel)
                        .addGap(18, 18, 18)
                        .addComponent(PhoneLabel)
                        .addGap(18, 18, 18)
                        .addComponent(AddressLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HourlyRateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RMLabel))
                        .addGap(18, 18, 18)
                        .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SportCenterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SportCenterLabel)
                        .addGap(18, 18, 18)
                        .addComponent(SportLabel)))
                .addGap(18, 18, 18)
                .addComponent(UpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(BackButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DayJoinedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayJoinedComboBoxActionPerformed
        dateJoined.day = DayJoinedComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_DayJoinedComboBoxActionPerformed

    private void MonthJoinedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthJoinedComboBoxActionPerformed
        DefaultComboBoxModel model = (DefaultComboBoxModel)DayJoinedComboBox.getModel();
        dateJoined.month = MonthJoinedComboBox.getSelectedItem().toString();
        switch (dateJoined.getMonthType()){
            case 0:{
                checkAndAddItem(model, "29");
                checkAndAddItem(model, "30");
                checkAndAddItem(model, "31");
                break;
            }
            case 1:{
                checkAndAddItem(model, "29");
                checkAndAddItem(model, "30");
                DayJoinedComboBox.removeItem("31");
                break;
            }
            case 2:{
                DayJoinedComboBox.removeItem("30");
                DayJoinedComboBox.removeItem("31");
                if (!dateJoined.isLeapYear()){
                    DayJoinedComboBox.removeItem("29");
                }
            }
        }
    }//GEN-LAST:event_MonthJoinedComboBoxActionPerformed

    private void YearJoinedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearJoinedComboBoxActionPerformed
        DefaultComboBoxModel model = (DefaultComboBoxModel)DayJoinedComboBox.getModel();
        dateJoined.year = YearJoinedComboBox.getSelectedItem().toString();
        if (dateJoined.isLeapYear()){
            if (dateJoined.month.equals("2")){
                checkAndAddItem(model, "29");
            }
        }
        else{
            DayJoinedComboBox.removeItem("29");
        }
    }//GEN-LAST:event_YearJoinedComboBoxActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        AdminModifyRecord amr = new AdminModifyRecord();
        amr.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void DayTerminatedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayTerminatedComboBoxActionPerformed
        dateTerminated.day = DayTerminatedComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_DayTerminatedComboBoxActionPerformed

    private void MonthTerminatedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthTerminatedComboBoxActionPerformed
        dateTerminated.month = MonthTerminatedComboBox.getSelectedItem().toString();
        switch (dateTerminated.getMonthType()){
            case 0:{
                DayTerminatedComboBox.addItem("29");
                DayTerminatedComboBox.addItem("30");
                DayTerminatedComboBox.addItem("31");
                break;
            }
            case 1:{
                DayTerminatedComboBox.addItem("29");
                DayTerminatedComboBox.addItem("30");
                DayTerminatedComboBox.removeItem("31");
                break;
            }
            case 2:{
                DayTerminatedComboBox.removeItem("30");
                DayTerminatedComboBox.removeItem("31");
                if (!dateTerminated.isLeapYear()){
                    DayTerminatedComboBox.removeItem("29");
                }
            }
        }
    }//GEN-LAST:event_MonthTerminatedComboBoxActionPerformed

    private void YearTerminatedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearTerminatedComboBoxActionPerformed
        dateTerminated.year = YearTerminatedComboBox.getSelectedItem().toString();
        if (dateTerminated.isLeapYear()){
            if (dateTerminated.month == "2"){
                DayTerminatedComboBox.addItem("29");
            }
        }
        else{
            DayTerminatedComboBox.removeItem("29");
        }
    }//GEN-LAST:event_YearTerminatedComboBoxActionPerformed

    private void TerminatedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerminatedCheckBoxActionPerformed
       if (TerminatedCheckBox.isSelected()){
            DayTerminatedComboBox.setEnabled(true);
            MonthTerminatedComboBox.setEnabled(true);
            YearTerminatedComboBox.setEnabled(true);
       }
       else{
            DayTerminatedComboBox.setEnabled(false);
            MonthTerminatedComboBox.setEnabled(false);
            YearTerminatedComboBox.setEnabled(false);
       }
    }//GEN-LAST:event_TerminatedCheckBoxActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        if (NameText.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter a name.", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(HourlyRateText.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter an hourly rate.", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            float HourlyRate = Float.parseFloat(HourlyRateText.getText().trim());
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please enter a valid hourly rate.", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        if(PhoneText.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter a phone number.", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(AddressText.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter an address.", "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String dateTerminatedText;
        if(!TerminatedCheckBox.isSelected()){
            dateTerminatedText = "None";
        }
        else{
            dateTerminatedText = String.format("%s/%s/%s", dateTerminated.day, dateTerminated.month, dateTerminated.year);
        }
        try {
            BufferedReader br = new BufferedReader(new FileReader("Coach Records.txt"));
            Object[] lines = br.lines().toArray();
            String[] data;
            Coach c = null;
            for (int i = 0; i < lines.length; i++) {
                data = lines[i].toString().split("\t");
                if (CoachIDComboBox.getSelectedItem().toString().equals(data[0])) {
                    c = new Coach(NameText.getText(), dateJoined.day + "/" + dateJoined.month + "/" + dateJoined.year, dateTerminatedText, Float.parseFloat(HourlyRateText.getText()), PhoneText.getText(), AddressText.getText(), SportCenterComboBox.getSelectedItem().toString().split(" ")[0], "None", SportComboBox.getSelectedItem().toString(), data[11]);
                    c.coachID = CoachIDComboBox.getSelectedItem().toString();
                    if (c.getSportID() == 1){
                        JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
                    }
                    if (c.modifyRecord() == 1){
                        JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            if (c.modifyRecord() == 1){
                JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "Coach record updated successfully.!", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            }
            br.close();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error opening file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void CoachIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoachIDComboBoxActionPerformed
        updateDetails();
    }//GEN-LAST:event_CoachIDComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminModifyCoach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminModifyCoach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminModifyCoach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminModifyCoach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminModifyCoach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField AddressText;
    private javax.swing.JLabel AdminModifyCoachLabel;
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox<String> CoachIDComboBox;
    private javax.swing.JLabel CoachIDLabel;
    private javax.swing.JLabel DateLabel1;
    private javax.swing.JLabel DateLabel2;
    private javax.swing.JLabel DateLabel3;
    private javax.swing.JLabel DateLabel4;
    private javax.swing.JLabel DateLabel5;
    private javax.swing.JLabel DateTerminatedLabel;
    private javax.swing.JComboBox<String> DayJoinedComboBox;
    private javax.swing.JComboBox<String> DayTerminatedComboBox;
    private javax.swing.JLabel HourlyRateLabel;
    private javax.swing.JTextField HourlyRateText;
    private javax.swing.JComboBox<String> MonthJoinedComboBox;
    private javax.swing.JComboBox<String> MonthTerminatedComboBox;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameText;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneText;
    private javax.swing.JLabel RMLabel;
    private javax.swing.JComboBox<String> SportCenterComboBox;
    private javax.swing.JLabel SportCenterLabel;
    private javax.swing.JComboBox<String> SportComboBox;
    private javax.swing.JLabel SportLabel;
    private javax.swing.JCheckBox TerminatedCheckBox;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JComboBox<String> YearJoinedComboBox;
    private javax.swing.JComboBox<String> YearTerminatedComboBox;
    // End of variables declaration//GEN-END:variables
}
